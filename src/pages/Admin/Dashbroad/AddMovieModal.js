import { UploadOutlined } from '@ant-design/icons';
import { Button, Form, Input, InputNumber, message, Modal, Select, Upload } from 'antd';
import React, { useEffect, useState } from 'react';
import { useTranslation } from 'react-i18next';

const { TextArea } = Input;
const { Option } = Select;

// Danh s√°ch th·ªÉ lo·∫°i phim
const movieGenres = [
  'H√†nh ƒë·ªông',
  'Phi√™u l∆∞u',
  'Ho·∫°t h√¨nh',
  'H√†i h∆∞·ªõc',
  'T·ªôi ph·∫°m',
  'T√†i li·ªáu',
  'Drama',
  'Gia ƒë√¨nh',
  'Fantasy',
  'L·ªãch s·ª≠',
  'Kinh d·ªã',
  '√Çm nh·∫°c',
  'B√≠ ·∫©n',
  'T√¨nh c·∫£m',
  'Khoa h·ªçc vi·ªÖn t∆∞·ªüng',
  'Thriller',
  'Chi·∫øn tranh',
  'Western',
  'Th·ªÉ thao',
  'Si√™u anh h√πng',
  'Kinh d·ªã t√¢m l√Ω',
  'H√†i ƒëen',
  'H√†nh ƒë·ªông h√†i',
  'T√¨nh c·∫£m l√£ng m·∫°n',
  'Kinh d·ªã si√™u nhi√™n',
  'Khoa h·ªçc vi·ªÖn t∆∞·ªüng h√†nh ƒë·ªông',
  'Drama t√¢m l√Ω',
  'H√†i gia ƒë√¨nh',
  'Thriller t√¢m l√Ω',
  'H√†nh ƒë·ªông chi·∫øn tranh',
];

const AddMovieModal = ({ visible, onCancel, onSuccess, editMovie }) => {
  const { t } = useTranslation();
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const [posterFile, setPosterFile] = useState(null);

  useEffect(() => {
    if (visible) {
      if (editMovie) {
        form.setFieldsValue({
          title: editMovie.title || '',
          othernames: editMovie.othernames || '',
          genre: editMovie.genre || '',
          description: editMovie.description || '',
          basePrice: editMovie.basePrice || undefined,
          duration: editMovie.duration || undefined,
          actors: Array.isArray(editMovie.actors)
            ? editMovie.actors.join(', ')
            : editMovie.actors || '',
          director: editMovie.director || '',
          country: editMovie.country || '',
          releaseDate: editMovie.releaseDate || '',
          posterUrl: editMovie.posterUrl || '',
        });
      } else {
        form.resetFields();
        setPosterFile(null);
      }
    }
  }, [visible, editMovie, form]);

  const handleSubmit = async () => {
    try {
      const values = await form.validateFields();
      setLoading(true);
      const movieData = {
        ...values,
        basePrice:
          values.basePrice !== undefined && values.basePrice !== ''
            ? Number(values.basePrice)
            : undefined,
        duration:
          values.duration !== undefined && values.duration !== ''
            ? Number(values.duration)
            : undefined,
      };
      await onSuccess(movieData, posterFile);
      form.resetFields();
      setPosterFile(null);
      onCancel();
    } catch (error) {
      console.error('Error adding/updating movie:', error);
      message.error(error.response?.data?.message || 'C√≥ l·ªói x·∫£y ra khi th√™m/c·∫≠p nh·∫≠t phim');
    } finally {
      setLoading(false);
    }
  };

  const handleCancel = () => {
    form.resetFields();
    setPosterFile(null);
    onCancel();
  };

  const uploadProps = {
    beforeUpload: (file) => {
      const isImage = file.type.startsWith('image/');
      if (!isImage) {
        message.error('Ch·ªâ ƒë∆∞·ª£c upload file ·∫£nh!');
        return false;
      }

      const isLt5M = file.size / 1024 / 1024 < 5;
      if (!isLt5M) {
        message.error('File ·∫£nh ph·∫£i nh·ªè h∆°n 5MB!');
        return false;
      }

      setPosterFile(file);
      return false; // Prevent upload
    },
    onChange: (info) => {
      if (info.file.status === 'removed') {
        setPosterFile(null);
      }
    },
    fileList: posterFile ? [posterFile] : [],
  };

  return (
    <Modal
      title={
        <span style={{ color: '#FFD600', fontWeight: 700, letterSpacing: 1 }}>
          {editMovie ? 'üé¨ C·∫≠p nh·∫≠t phim' : 'üé¨ Th√™m phim m·ªõi'}
        </span>
      }
      open={visible}
      onCancel={handleCancel}
      onOk={handleSubmit}
      confirmLoading={loading}
      width={700}
      okText={<span style={{ color: '#fff' }}>{editMovie ? 'C·∫≠p nh·∫≠t phim' : 'Th√™m phim'}</span>}
      cancelText={<span style={{ color: '#222' }}>Hu·ª∑</span>}
      className="border-2 border-transparent bg-gradient-to-r from-yellow-400 to-red-500 rounded-2xl"
      style={{ padding: 0, background: '#fff' }} // n·ªÅn tr·∫Øng
    >
      <Form
        form={form}
        layout="vertical"
        initialValues={{}}
        style={{ background: '#fff', borderRadius: 18, padding: 20 }}
      >
        <div style={{ display: 'flex', gap: 24, flexWrap: 'wrap' }}>
          {/* C·ªôt tr√°i: Th√¥ng tin c∆° b·∫£n */}
          <div style={{ flex: 1, minWidth: 280 }}>
            <Form.Item
              name="title"
              label={<span style={{ fontWeight: 600, color: '#FFD600' }}>T√™n phim *</span>}
              rules={[{ required: true, message: t('common.error', 'Vui l√≤ng nh·∫≠p t√™n phim!') }]}
            >
              <Input
                placeholder="Nh·∫≠p t√™n phim"
                style={{
                  borderColor: '#ddd',
                  background: '#fff',
                  color: '#222',
                  borderRadius: 8,
                  padding: '8px 12px',
                }}
                onFocus={(e) => (e.target.style.borderColor = '#FFD600')}
                onBlur={(e) => (e.target.style.borderColor = '#ddd')}
              />
            </Form.Item>
            <Form.Item name="othernames" label={<span style={{ color: '#888' }}>T√™n kh√°c</span>}>
              <Input
                placeholder="T√™n kh√°c (n·∫øu c√≥)"
                style={{
                  background: '#fff',
                  color: '#222',
                  borderColor: '#ddd',
                  borderRadius: 8,
                  padding: '8px 12px',
                }}
              />
            </Form.Item>
            <Form.Item name="genre" label={<span style={{ color: '#222' }}>Th·ªÉ lo·∫°i</span>}>
              <Select
                placeholder="Ch·ªçn th·ªÉ lo·∫°i"
                allowClear
                showSearch
                filterOption={(input, option) =>
                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0
                }
                style={{ background: '#fff', color: '#222', borderColor: '#ddd', borderRadius: 8 }}
                dropdownStyle={{ background: '#fff', color: '#222', borderRadius: 8 }}
              >
                {movieGenres.map((genre) => (
                  <Option key={genre} value={genre}>
                    {genre}
                  </Option>
                ))}
              </Select>
            </Form.Item>
            <Form.Item name="description" label={<span style={{ color: '#222' }}>M√¥ t·∫£ phim</span>}>
              <TextArea
                rows={3}
                placeholder="M√¥ t·∫£ ng·∫Øn v·ªÅ phim..."
                style={{
                  background: '#fff',
                  color: '#222',
                  borderColor: '#ddd',
                  borderRadius: 8,
                  padding: '8px 12px',
                }}
              />
            </Form.Item>
          </div>
          {/* C·ªôt ph·∫£i: Th√¥ng tin chi ti·∫øt */}
          <div style={{ flex: 1, minWidth: 280 }}>
            <div style={{ display: 'flex', gap: 12 }}>
              <Form.Item
                name="basePrice"
                label={<span style={{ color: '#222' }}>Gi√° v√© (VND)</span>}
                style={{ flex: 1 }}
              >
                <InputNumber
                  placeholder="100000"
                  min={0}
                  style={{
                    width: '100%',
                    background: '#fff',
                    color: '#222',
                    borderColor: '#ddd',
                    borderRadius: 8,
                    padding: '8px 12px',
                  }}
                  onFocus={(e) => (e.target.style.borderColor = '#FFD600')}
                  onBlur={(e) => (e.target.style.borderColor = '#ddd')}
                />
              </Form.Item>
              <Form.Item
                name="duration"
                label={<span style={{ color: '#222' }}>Th·ªùi l∆∞·ª£ng (ph√∫t)</span>}
                style={{ flex: 1 }}
              >
                <InputNumber
                  placeholder="120"
                  min={1}
                  style={{
                    width: '100%',
                    background: '#fff',
                    color: '#222',
                    borderColor: '#ddd',
                    borderRadius: 8,
                    padding: '8px 12px',
                  }}
                  onFocus={(e) => (e.target.style.borderColor = '#FFD600')}
                  onBlur={(e) => (e.target.style.borderColor = '#ddd')}
                />
              </Form.Item>
            </div>
            <Form.Item name="actors" label={<span style={{ color: '#222' }}>Di·ªÖn vi√™n</span>}>
              <Input
                placeholder="Nguyen Van A, Tran Thi B"
                style={{
                  background: '#fff',
                  color: '#222',
                  borderColor: '#ddd',
                  borderRadius: 8,
                  padding: '8px 12px',
                }}
              />
            </Form.Item>
            <Form.Item name="director" label={<span style={{ color: '#222' }}>ƒê·∫°o di·ªÖn</span>}>
              <Input
                placeholder="Le Van C"
                style={{
                  background: '#fff',
                  color: '#222',
                  borderColor: '#ddd',
                  borderRadius: 8,
                  padding: '8px 12px',
                }}
              />
            </Form.Item>
            <Form.Item name="country" label={<span style={{ color: '#222' }}>Qu·ªëc gia</span>}>
              <Input
                placeholder="Vi·ªát Nam"
                style={{
                  background: '#fff',
                  color: '#222',
                  borderColor: '#ddd',
                  borderRadius: 8,
                  padding: '8px 12px',
                }}
              />
            </Form.Item>
            <Form.Item
              name="releaseDate"
              label={<span style={{ color: '#222' }}>Ng√†y ph√°t h√†nh</span>}
            >
              <Input
                type="date"
                style={{
                  background: '#fff',
                  color: '#222',
                  borderColor: '#ddd',
                  borderRadius: 8,
                  padding: '8px 12px',
                }}
              />
            </Form.Item>
          </div>
        </div>
        {/* ·∫¢nh poster */}
        <div style={{ display: 'flex', gap: 24, marginTop: 8, flexWrap: 'wrap' }}>
          <div style={{ flex: 1, minWidth: 280 }}>
            <Form.Item name="posterUrl" label={<span style={{ color: '#222' }}>Poster URL</span>}>
              <Input
                placeholder="https://..."
                style={{
                  background: '#fff',
                  color: '#222',
                  borderColor: '#ddd',
                  borderRadius: 8,
                  padding: '8px 12px',
                }}
              />
            </Form.Item>
          </div>
          <div style={{ flex: 1, minWidth: 280 }}>
            <Form.Item label={<span style={{ color: '#222' }}>Upload poster</span>}>
              <Upload {...uploadProps} listType="picture">
                <Button
                  style={{
                    background: 'linear-gradient(90deg,#FFD600,#FF4D4F)',
                    color: '#222',
                    fontWeight: 600,
                    border: 'none',
                    borderRadius: 8,
                  }}
                  icon={<UploadOutlined />}
                >
                  T·∫£i ·∫£nh l√™n
                </Button>
              </Upload>
              <div style={{ fontSize: 12, color: '#FFD600', marginTop: 8 }}>
                Ch·∫•p nh·∫≠n: JPG, PNG, GIF. T·ªëi ƒëa: 5MB
              </div>
            </Form.Item>
          </div>
        </div>
      </Form>
    </Modal>
  );
};

export default AddMovieModal;
